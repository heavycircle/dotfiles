#!/usr/bin/env bash

# Set the current theme.

################################################################
#   CONFIG                                                     #
################################################################

CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}"

THEME_DIR="$CONFIG_DIR/theme"
CURR_THEME="current"

declare -A CONSUMERS=(
    ["alacritty.toml"]="${CONFIG_DIR}/alacritty/themes/current.toml"
    ["bash.bash"]="${CONFIG_DIR}/bash/theme.bash"
    ["btop.theme"]="${CONFIG_DIR}/btop/themes/current.theme"
    ["neovim.lua"]="${CONFIG_DIR}/nvim/lua/plugins/colorscheme.lua"
    ["ranger.py"]="${CONFIG_DIR}/ranger/colorschemes/current.py"
    ["tmux.conf"]="${CONFIG_DIR}/tmux/themes/current.conf"
    ["waybar.css"]="${CONFIG_DIR}/waybar/current.css"
    ["zsh.zsh"]="${CONFIG_DIR}/zsh/theme.zsh"
)

################################################################
#   LOGGERS                                                    #
################################################################

fatal() {
    echo -e "\033[1;31m[-]\033[0m  $*" >&2
    exit 1
}

debug() {
    echo -e "\033[1;32m[+]\033[0m  $*" >&2
}

warning() {
    echo -e "\033[1;33m[*]\033[0m  $*" >&2
}

################################################################
#   UTILITIES                                                  #
################################################################

fix-symlinks() {
    local tgt

    for c in "${!CONSUMERS[@]}"; do
        # Check for a working symlink
        tgt=$(readlink "${CONSUMERS[$c]}")
        [[ -n "$tgt" ]] || continue
        [[ -f "$tgt" ]] && continue

        warning "fixing broken symlink: ${CONSUMERS[$c]} -> $tgt"
        rm "${CONSUMERS[$c]}"
        ln -snf "$HOME/.config/theme/current/$c" "${CONSUMERS[$c]}"
    done
}

get-themes() {
    declare -g THEMES

    [[ -d "$THEME_DIR" ]] || fatal "missing theme directory: $THEME_DIR"

    for theme in "$THEME_DIR"/*; do
        local base=${theme##*/}
        [[ -d "$base" ]] || continue
        [[ "$base" == "$CURR_THEME" ]] && continue
        THEMES+=("$base")
    done
}

auto-restart() {
    debug "bash: no action required!"

    if command -v hyprctl >/dev/null; then
        debug "hyprland: reloading"
        hyprctl reload
        debug "hyprland: reloaded!"

        debug "hyprpaper: restarting"
        killall hyprpaper
        hyprpaper >/dev/null &
        debug "hyprpaper: restarted!"
    fi

    if command -v nvim >/dev/null; then
        warning "neovim: requires restart!"
    fi

    if command -v tmux >/dev/null; then
        debug "tmux: sourcing"
        tmux source ~/.config/tmux/themes/current.conf
        debug "tmux: sourced!"
    fi

    if command -v waybar >/dev/null; then
        debug "waybar: no action required!"
    fi

    if command -v zsh >/dev/null; then
        warning "zsh: requires sourcing!"
    fi
}

theme() {
    local choice="$1"

    get-themes
    if ! [[ "${THEMES[*]}" =~ $choice ]]; then
        fatal "invalid theme: $choice"
    fi

    debug "Switching to $choice . . ."
    rm -f ~/.config/theme/current
    ln -sf ~/.config/theme/"$choice" ~/.config/theme/current
    debug "Theme applied!"

    fix-symlinks
    auto-restart
}

if (! return 2>/dev/null); then
    theme "$@"
fi
